// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250413125503_Second")]
    partial class Second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("Entities.Forum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForumGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Header")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ForumGroupId");

                    b.ToTable("Forums");
                });

            modelBuilder.Entity("Entities.ForumGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Header")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ForumGroups");
                });

            modelBuilder.Entity("Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Mod sayfasında yer alan \"İndir\" butonuna tıklayarak dosyayı cihazınıza indirebilirsiniz. Giriş yapmanız gerekebilir.",
                            Text = "Modları nasıl indirebilirim?"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Her modun altında, kurulum adımları ayrı bir başlık altında açıklanır. Genel olarak, indirdiğiniz dosyayı oyunun kurulu olduğu klasöre kopyalamanız yeterlidir.",
                            Text = "Modu oyuna nasıl kurabilirim?"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Öncelikle modun oyununuzun sürümüyle uyumlu olup olmadığını kontrol edin. Yine de sorun yaşarsanız ilgili mod başlığında yardım isteyebilirsiniz.",
                            Text = "Bir mod çalışmıyor, ne yapmalıyım?"
                        },
                        new
                        {
                            Id = 4,
                            Description = "\"Mod Paylaş\" bölümüne giderek yeni konu açabilir ve modunuzu dosya olarak ekleyebilirsiniz. Açıklama, kurulum bilgisi ve ekran görüntüsü eklemeniz önerilir.",
                            Text = "Kendi yaptığım modu nasıl paylaşabilirim?"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Telif hakkı ihlali içermeyen, sizin tarafınızdan yapılmış ya da izinle paylaşılan modlar paylaşılabilir. Aksi durumda moderatörler içeriği kaldırabilir.",
                            Text = "Mod paylaşmak yasak mı? Telif sorunları olur mu?"
                        });
                });

            modelBuilder.Entity("Entities.Rule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Tüm üyelerle nazik ve saygılı bir şekilde iletişim kurun. Hakaret, küfür, alaycı tavırlar yasaktır.",
                            Title = "Saygılı Olun"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Her konuyu doğru kategoriye açın. Konu dışı mesajlar silinebilir veya taşınabilir.",
                            Title = "Konu Dışı Paylaşım Yapmayın"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Yeni bir konu açmadan önce forumda benzer bir konu olup olmadığını kontrol edin.",
                            Title = "Spam ve Reklam Yasaktır"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Yeni bir konu açmadan önce forumda benzer bir konu olup olmadığını kontrol edin.",
                            Title = "Arama Yapmadan Konu Açmayın"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Paylaşımlarınızda telif hakkı ihlali, yasa dışı içerik veya suç teşkil eden ifadeler bulundurmayın.",
                            Title = "Yasalara Uyun"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Forum ortamında küfür, argo, tehdit veya hakaret içeren ifadeler kullanmayın.",
                            Title = "Küfür ve Hakaret Etmeyin"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Kendi veya başkasına ait özel bilgileri (adres, telefon, şifre vb.) paylaşmayın.",
                            Title = "Kişisel Bilgi Paylaşmayın"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Fikir ayrılıkları doğaldır. Tartışmaları kişiselleştirmeyin, yapıcı olun.",
                            Title = "Tartışmalarda Soğukkanlı Kalın"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Forumda sadece bir kullanıcı hesabınız olsun. Çoklu hesaplar yasaktır.",
                            Title = "Tartışmalarda Soğukkanlı Kalın"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Yöneticiler ve moderatörlerin uyarılarına uymayan kullanıcıların hesapları kısıtlanabilir.",
                            Title = "Yönetici Uyarılarına Uyulmalı"
                        });
                });

            modelBuilder.Entity("Entities.Forum", b =>
                {
                    b.HasOne("Entities.ForumGroup", "Group")
                        .WithMany("Forums")
                        .HasForeignKey("ForumGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Entities.ForumGroup", b =>
                {
                    b.Navigation("Forums");
                });
#pragma warning restore 612, 618
        }
    }
}
